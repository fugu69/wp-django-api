# Generated by Django 5.2.3 on 2025-06-15 04:49

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountEmailconfirmation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField()),
                ('sent', models.DateTimeField(blank=True, null=True)),
                ('key', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'db_table': 'account_emailconfirmation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('title', models.CharField(max_length=100)),
                ('body', models.TextField()),
                ('pinned', models.BooleanField()),
                ('pin_order', models.IntegerField()),
            ],
            options={
                'db_table': 'article_article',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleArticleViewers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'article_article_viewers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleArticleVotesCon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'article_article_votes_con',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleArticleVotesPro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'article_article_votes_pro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleCommentsblock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('messages', models.TextField()),
            ],
            options={
                'db_table': 'article_commentsblock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'article_subscription',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AvaBorderAvaborder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('price', models.IntegerField()),
                ('deleted', models.BooleanField()),
                ('shape', models.TextField()),
                ('box_x', models.DecimalField(decimal_places=2, max_digits=9)),
                ('box_y', models.DecimalField(decimal_places=2, max_digits=9)),
                ('image', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'ava_border_avaborder',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AvaBorderAvaborderownership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_use', models.BooleanField()),
                ('png_use', models.BooleanField()),
            ],
            options={
                'db_table': 'ava_border_avaborderownership',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillChangecoat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('type', models.CharField(blank=True, max_length=2, null=True)),
                ('cash_cost', models.BigIntegerField()),
                ('voting_start', models.DateTimeField()),
                ('voting_end', models.DateTimeField(blank=True, null=True)),
                ('image', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'bill_changecoat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillChangecoatVotesCon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_changecoat_votes_con',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillChangecoatVotesPro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_changecoat_votes_pro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillChangeform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('type', models.CharField(blank=True, max_length=2, null=True)),
                ('cash_cost', models.BigIntegerField()),
                ('voting_start', models.DateTimeField()),
                ('voting_end', models.DateTimeField(blank=True, null=True)),
                ('form', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'bill_changeform',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillChangeformVotesCon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_changeform_votes_con',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillChangeformVotesPro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_changeform_votes_pro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillChangeresidency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('type', models.CharField(blank=True, max_length=2, null=True)),
                ('cash_cost', models.BigIntegerField()),
                ('voting_start', models.DateTimeField()),
                ('voting_end', models.DateTimeField(blank=True, null=True)),
                ('residency', models.CharField(max_length=5)),
                ('rifle_cost', models.IntegerField()),
                ('drone_cost', models.IntegerField()),
            ],
            options={
                'db_table': 'bill_changeresidency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillChangeresidencyVotesCon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_changeresidency_votes_con',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillChangeresidencyVotesPro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_changeresidency_votes_pro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillChangetaxes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('type', models.CharField(blank=True, max_length=2, null=True)),
                ('cash_cost', models.BigIntegerField()),
                ('voting_start', models.DateTimeField()),
                ('voting_end', models.DateTimeField(blank=True, null=True)),
                ('destination', models.CharField(blank=True, max_length=6, null=True)),
                ('tax_mod', models.CharField(blank=True, max_length=6, null=True)),
                ('new_tax', models.DecimalField(decimal_places=2, max_digits=5)),
                ('old_tax', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'db_table': 'bill_changetaxes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillChangetaxesVotesCon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_changetaxes_votes_con',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillChangetaxesVotesPro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_changetaxes_votes_pro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillChangetitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('type', models.CharField(blank=True, max_length=2, null=True)),
                ('cash_cost', models.BigIntegerField()),
                ('voting_start', models.DateTimeField()),
                ('voting_end', models.DateTimeField(blank=True, null=True)),
                ('new_title', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'bill_changetitle',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillChangetitleVotesCon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_changetitle_votes_con',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillChangetitleVotesPro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_changetitle_votes_pro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillConstruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('type', models.CharField(blank=True, max_length=2, null=True)),
                ('cash_cost', models.BigIntegerField()),
                ('voting_start', models.DateTimeField()),
                ('voting_end', models.DateTimeField(blank=True, null=True)),
                ('building', models.CharField(blank=True, max_length=20, null=True)),
                ('exp_value', models.IntegerField()),
            ],
            options={
                'db_table': 'bill_construction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillConstructionVotesCon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_construction_votes_con',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillConstructionVotesPro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_construction_votes_pro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillExploreall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('type', models.CharField(blank=True, max_length=2, null=True)),
                ('cash_cost', models.BigIntegerField()),
                ('voting_start', models.DateTimeField()),
                ('voting_end', models.DateTimeField(blank=True, null=True)),
                ('resource', models.CharField(blank=True, max_length=4, null=True)),
                ('exp_value', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'db_table': 'bill_exploreall',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillExploreallregion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exp_value', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'db_table': 'bill_exploreallregion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillExploreallVotesCon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_exploreall_votes_con',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillExploreallVotesPro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_exploreall_votes_pro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillExploreresources',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('type', models.CharField(blank=True, max_length=2, null=True)),
                ('cash_cost', models.BigIntegerField()),
                ('voting_start', models.DateTimeField()),
                ('voting_end', models.DateTimeField(blank=True, null=True)),
                ('resource', models.CharField(blank=True, max_length=4, null=True)),
                ('exp_value', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'db_table': 'bill_exploreresources',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillExploreresourcesVotesCon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_exploreresources_votes_con',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillExploreresourcesVotesPro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_exploreresources_votes_pro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillIndependence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('type', models.CharField(blank=True, max_length=2, null=True)),
                ('cash_cost', models.BigIntegerField()),
                ('voting_start', models.DateTimeField()),
                ('voting_end', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bill_independence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillIndependenceVotesCon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_independence_votes_con',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillIndependenceVotesPro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_independence_votes_pro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillMartiallaw',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('type', models.CharField(blank=True, max_length=2, null=True)),
                ('cash_cost', models.BigIntegerField()),
                ('voting_start', models.DateTimeField()),
                ('voting_end', models.DateTimeField(blank=True, null=True)),
                ('mode', models.CharField(max_length=4)),
            ],
            options={
                'db_table': 'bill_martiallaw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillMartiallawVotesCon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_martiallaw_votes_con',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillMartiallawVotesPro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_martiallaw_votes_pro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillPurchaseauction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('type', models.CharField(blank=True, max_length=2, null=True)),
                ('cash_cost', models.BigIntegerField()),
                ('voting_start', models.DateTimeField()),
                ('voting_end', models.DateTimeField(blank=True, null=True)),
                ('old_good', models.CharField(max_length=10)),
                ('buy_value', models.BigIntegerField()),
                ('lots_count', models.BigIntegerField()),
            ],
            options={
                'db_table': 'bill_purchaseauction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillPurchaseauctionVotesCon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_purchaseauction_votes_con',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillPurchaseauctionVotesPro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_purchaseauction_votes_pro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillStartwar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('type', models.CharField(blank=True, max_length=2, null=True)),
                ('cash_cost', models.BigIntegerField()),
                ('voting_start', models.DateTimeField()),
                ('voting_end', models.DateTimeField(blank=True, null=True)),
                ('war_type', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'bill_startwar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillStartwarVotesCon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_startwar_votes_con',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillStartwarVotesPro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_startwar_votes_pro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillTransferaccept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('type', models.CharField(blank=True, max_length=2, null=True)),
                ('cash_cost', models.BigIntegerField()),
                ('voting_start', models.DateTimeField()),
                ('voting_end', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bill_transferaccept',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillTransferacceptVotesCon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_transferaccept_votes_con',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillTransferacceptVotesPro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_transferaccept_votes_pro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillTransferregion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('type', models.CharField(blank=True, max_length=2, null=True)),
                ('cash_cost', models.BigIntegerField()),
                ('voting_start', models.DateTimeField()),
                ('voting_end', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bill_transferregion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillTransferregionVotesCon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_transferregion_votes_con',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillTransferregionVotesPro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_transferregion_votes_pro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillTransferresources',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('type', models.CharField(blank=True, max_length=2, null=True)),
                ('cash_cost', models.BigIntegerField()),
                ('voting_start', models.DateTimeField()),
                ('voting_end', models.DateTimeField(blank=True, null=True)),
                ('send_cash', models.BooleanField()),
                ('send_count', models.BigIntegerField()),
            ],
            options={
                'db_table': 'bill_transferresources',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillTransferresourcesVotesCon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_transferresources_votes_con',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillTransferresourcesVotesPro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'bill_transferresources_votes_pro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChatChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'chat_chat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChatChatmembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'chat_chatmembers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChatMessageblock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('messages', models.TextField()),
            ],
            options={
                'db_table': 'chat_messageblock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChatSticker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=20)),
                ('image', models.CharField(max_length=100)),
                ('deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'chat_sticker',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChatStickerpack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('creator', models.CharField(max_length=100)),
                ('creator_link', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('deleted', models.BooleanField()),
                ('price', models.IntegerField()),
                ('percent', models.IntegerField()),
                ('creator_az', models.CharField(blank=True, max_length=100, null=True)),
                ('creator_be', models.CharField(blank=True, max_length=100, null=True)),
                ('creator_de', models.CharField(blank=True, max_length=100, null=True)),
                ('creator_en', models.CharField(blank=True, max_length=100, null=True)),
                ('creator_es', models.CharField(blank=True, max_length=100, null=True)),
                ('creator_ind', models.CharField(blank=True, max_length=100, null=True)),
                ('creator_lv', models.CharField(blank=True, max_length=100, null=True)),
                ('creator_pl', models.CharField(blank=True, max_length=100, null=True)),
                ('creator_pt_br', models.CharField(blank=True, max_length=100, null=True)),
                ('creator_ru', models.CharField(blank=True, max_length=100, null=True)),
                ('creator_tr', models.CharField(blank=True, max_length=100, null=True)),
                ('creator_uk', models.CharField(blank=True, max_length=100, null=True)),
                ('description_az', models.CharField(blank=True, max_length=500, null=True)),
                ('description_be', models.CharField(blank=True, max_length=500, null=True)),
                ('description_de', models.CharField(blank=True, max_length=500, null=True)),
                ('description_en', models.CharField(blank=True, max_length=500, null=True)),
                ('description_es', models.CharField(blank=True, max_length=500, null=True)),
                ('description_ind', models.CharField(blank=True, max_length=500, null=True)),
                ('description_lv', models.CharField(blank=True, max_length=500, null=True)),
                ('description_pl', models.CharField(blank=True, max_length=500, null=True)),
                ('description_pt_br', models.CharField(blank=True, max_length=500, null=True)),
                ('description_ru', models.CharField(blank=True, max_length=500, null=True)),
                ('description_tr', models.CharField(blank=True, max_length=500, null=True)),
                ('description_uk', models.CharField(blank=True, max_length=500, null=True)),
                ('title_az', models.CharField(blank=True, max_length=100, null=True)),
                ('title_be', models.CharField(blank=True, max_length=100, null=True)),
                ('title_de', models.CharField(blank=True, max_length=100, null=True)),
                ('title_en', models.CharField(blank=True, max_length=100, null=True)),
                ('title_es', models.CharField(blank=True, max_length=100, null=True)),
                ('title_ind', models.CharField(blank=True, max_length=100, null=True)),
                ('title_lv', models.CharField(blank=True, max_length=100, null=True)),
                ('title_pl', models.CharField(blank=True, max_length=100, null=True)),
                ('title_pt_br', models.CharField(blank=True, max_length=100, null=True)),
                ('title_ru', models.CharField(blank=True, max_length=100, null=True)),
                ('title_tr', models.CharField(blank=True, max_length=100, null=True)),
                ('title_uk', models.CharField(blank=True, max_length=100, null=True)),
                ('creator_fr', models.CharField(blank=True, max_length=100, null=True)),
                ('creator_it', models.CharField(blank=True, max_length=100, null=True)),
                ('creator_sr', models.CharField(blank=True, max_length=100, null=True)),
                ('description_fr', models.CharField(blank=True, max_length=500, null=True)),
                ('description_it', models.CharField(blank=True, max_length=500, null=True)),
                ('description_sr', models.CharField(blank=True, max_length=500, null=True)),
                ('title_fr', models.CharField(blank=True, max_length=100, null=True)),
                ('title_it', models.CharField(blank=True, max_length=100, null=True)),
                ('title_sr', models.CharField(blank=True, max_length=100, null=True)),
                ('creator_hy', models.CharField(blank=True, max_length=100, null=True)),
                ('description_hy', models.CharField(blank=True, max_length=500, null=True)),
                ('title_hy', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'chat_stickerpack',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChatStickersownership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'chat_stickersownership',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryBeatClockedschedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clocked_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_celery_beat_clockedschedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryBeatCrontabschedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minute', models.CharField(max_length=240)),
                ('hour', models.CharField(max_length=96)),
                ('day_of_week', models.CharField(max_length=64)),
                ('day_of_month', models.CharField(max_length=124)),
                ('month_of_year', models.CharField(max_length=64)),
                ('timezone', models.CharField(max_length=63)),
            ],
            options={
                'db_table': 'django_celery_beat_crontabschedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryBeatIntervalschedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('every', models.IntegerField()),
                ('period', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'django_celery_beat_intervalschedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryBeatPeriodictask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('task', models.CharField(max_length=200)),
                ('args', models.TextField()),
                ('kwargs', models.TextField()),
                ('queue', models.CharField(blank=True, max_length=200, null=True)),
                ('exchange', models.CharField(blank=True, max_length=200, null=True)),
                ('routing_key', models.CharField(blank=True, max_length=200, null=True)),
                ('expires', models.DateTimeField(blank=True, null=True)),
                ('enabled', models.BooleanField()),
                ('last_run_at', models.DateTimeField(blank=True, null=True)),
                ('total_run_count', models.IntegerField()),
                ('date_changed', models.DateTimeField()),
                ('description', models.TextField()),
                ('one_off', models.BooleanField()),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('headers', models.TextField()),
                ('expire_seconds', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'django_celery_beat_periodictask',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryBeatPeriodictasks',
            fields=[
                ('ident', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('last_update', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_celery_beat_periodictasks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryBeatSolarschedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(max_length=24)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
            ],
            options={
                'db_table': 'django_celery_beat_solarschedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryResultsChordcounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.CharField(max_length=255, unique=True)),
                ('sub_tasks', models.TextField()),
                ('count', models.IntegerField()),
            ],
            options={
                'db_table': 'django_celery_results_chordcounter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryResultsGroupresult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.CharField(max_length=255, unique=True)),
                ('date_created', models.DateTimeField()),
                ('date_done', models.DateTimeField()),
                ('content_type', models.CharField(max_length=128)),
                ('content_encoding', models.CharField(max_length=64)),
                ('result', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'django_celery_results_groupresult',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryResultsTaskresult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(max_length=255, unique=True)),
                ('status', models.CharField(max_length=50)),
                ('content_type', models.CharField(max_length=128)),
                ('content_encoding', models.CharField(max_length=64)),
                ('result', models.TextField(blank=True, null=True)),
                ('date_done', models.DateTimeField()),
                ('traceback', models.TextField(blank=True, null=True)),
                ('meta', models.TextField(blank=True, null=True)),
                ('task_args', models.TextField(blank=True, null=True)),
                ('task_kwargs', models.TextField(blank=True, null=True)),
                ('task_name', models.CharField(blank=True, max_length=255, null=True)),
                ('worker', models.CharField(blank=True, max_length=100, null=True)),
                ('date_created', models.DateTimeField()),
                ('periodic_task_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'django_celery_results_taskresult',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'django_site',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSummernoteAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('file', models.CharField(max_length=100)),
                ('uploaded', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_summernote_attachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventActivityevent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('title', models.CharField(max_length=30)),
                ('event_start', models.DateTimeField(blank=True, null=True)),
                ('event_end', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event_activityevent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventActivityeventpart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
                ('paid_points', models.IntegerField()),
                ('global_paid_points', models.IntegerField()),
                ('boost', models.IntegerField()),
            ],
            options={
                'db_table': 'event_activityeventpart',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventActivityglobalpart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
            ],
            options={
                'db_table': 'event_activityglobalpart',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventCashevent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('title', models.CharField(max_length=30)),
                ('event_start', models.DateTimeField(blank=True, null=True)),
                ('event_end', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event_cashevent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventInvite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exp', models.IntegerField()),
            ],
            options={
                'db_table': 'event_invite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FactoryAutoproduce',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtime', models.DateTimeField()),
                ('old_good', models.CharField(blank=True, max_length=10, null=True)),
                ('schema', models.IntegerField()),
            ],
            options={
                'db_table': 'factory_autoproduce',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FactoryBlueprint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('energy_cost', models.IntegerField()),
                ('cash_cost', models.IntegerField()),
            ],
            options={
                'db_table': 'factory_blueprint',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FactoryComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
            ],
            options={
                'db_table': 'factory_component',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FactoryFactory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('image', models.CharField(blank=True, max_length=100, null=True)),
                ('level', models.IntegerField()),
                ('deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'factory_factory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FactoryProductionlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtime', models.DateTimeField()),
                ('old_good', models.CharField(blank=True, max_length=20, null=True)),
                ('good_move', models.CharField(max_length=5)),
                ('prod_value', models.IntegerField()),
                ('cash', models.BooleanField()),
            ],
            options={
                'db_table': 'factory_productionlog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FactoryWorkplace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField()),
            ],
            options={
                'db_table': 'factory_workplace',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FactoryWorkshop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('good', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'factory_workshop',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GovMinister',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'gov_minister',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GovMinisterright',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('right', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'gov_ministerright',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GovMinisterRights',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'gov_minister_rights',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GovPermitrequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'gov_permitrequest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GovPresident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elections_day', models.IntegerField()),
                ('foundation_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'gov_president',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GovPresidentialvoting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('voting_start', models.DateTimeField()),
                ('voting_end', models.DateTimeField()),
            ],
            options={
                'db_table': 'gov_presidentialvoting',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GovPresidentialvotingCandidates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'gov_presidentialvoting_candidates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GovResidencyrequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'gov_residencyrequest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GovVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'gov_vote',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GovWorkpermit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtime', models.DateTimeField()),
                ('deleted', models.BooleanField()),
                ('until', models.DateTimeField()),
            ],
            options={
                'db_table': 'gov_workpermit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetricsDailycash',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('cash', models.BigIntegerField()),
            ],
            options={
                'db_table': 'metrics_dailycash',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetricsDailycashbystate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('cash', models.BigIntegerField()),
            ],
            options={
                'db_table': 'metrics_dailycashbystate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetricsDailygold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('gold', models.BigIntegerField()),
            ],
            options={
                'db_table': 'metrics_dailygold',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetricsDailygoldbystate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('gold', models.BigIntegerField()),
                ('daily_gold', models.BigIntegerField()),
            ],
            options={
                'db_table': 'metrics_dailygoldbystate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetricsDailyoil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('oil', models.BigIntegerField()),
                ('type', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'metrics_dailyoil',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetricsDailyore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('ore', models.BigIntegerField()),
                ('type', models.CharField(max_length=7)),
            ],
            options={
                'db_table': 'metrics_dailyore',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartyMembershiplog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtime', models.DateTimeField()),
                ('exit_dtime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'party_membershiplog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartyParty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('type', models.CharField(max_length=2)),
                ('foundation_date', models.DateTimeField()),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
                ('image', models.CharField(blank=True, max_length=100, null=True)),
                ('deleted', models.BooleanField()),
                ('members_image', models.CharField(blank=True, max_length=100, null=True)),
                ('color', models.CharField(max_length=6)),
                ('primaries_day', models.IntegerField()),
                ('gold', models.BigIntegerField()),
            ],
            options={
                'db_table': 'party_party',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartyPartyapply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=2)),
                ('dtime', models.DateTimeField()),
            ],
            options={
                'db_table': 'party_partyapply',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartyPartygoldlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtime', models.DateTimeField()),
                ('gold', models.BigIntegerField()),
                ('activity_txt', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'party_partygoldlog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartyPartyposition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('based', models.BooleanField()),
                ('party_lead', models.BooleanField()),
                ('party_sec', models.BooleanField()),
            ],
            options={
                'db_table': 'party_partyposition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartyPrimaries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('prim_start', models.DateTimeField(blank=True, null=True)),
                ('prim_end', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'party_primaries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartyPrimariesleader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'party_primariesleader',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartyPrimbulletin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'party_primbulletin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerAutomining',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtime', models.DateTimeField()),
                ('resource', models.CharField(blank=True, max_length=4, null=True)),
            ],
            options={
                'db_table': 'player_automining',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerBonuscode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=30)),
                ('reusable', models.BooleanField()),
                ('date', models.DateTimeField()),
                ('premium', models.IntegerField()),
                ('gold', models.IntegerField()),
                ('wild_pass', models.IntegerField()),
                ('cash', models.IntegerField()),
                ('color', models.CharField(max_length=20)),
                ('invite', models.BooleanField()),
                ('plane', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'player_bonuscode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerCashlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtime', models.DateTimeField()),
                ('cash', models.BigIntegerField()),
                ('object_id', models.IntegerField(blank=True, null=True)),
                ('activity_txt', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'player_cashlog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerCodeusage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtime', models.DateTimeField()),
            ],
            options={
                'db_table': 'player_codeusage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerDonutlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtime', models.DateTimeField()),
            ],
            options={
                'db_table': 'player_donutlog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerEnergyspent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
                ('fin', models.BooleanField()),
            ],
            options={
                'db_table': 'player_energyspent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerEventpart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
                ('paid_points', models.IntegerField()),
                ('global_paid_points', models.IntegerField()),
                ('boost', models.IntegerField()),
            ],
            options={
                'db_table': 'player_eventpart',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerFreebieusage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtime', models.DateTimeField()),
                ('type', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'player_freebieusage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerGameevent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('title', models.CharField(max_length=30)),
                ('event_start', models.DateTimeField(blank=True, null=True)),
                ('event_end', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'player_gameevent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerGlobalpart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
            ],
            options={
                'db_table': 'player_globalpart',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerGoldlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtime', models.DateTimeField()),
                ('gold', models.BigIntegerField()),
                ('object_id', models.IntegerField(blank=True, null=True)),
                ('activity_txt', models.CharField(blank=True, max_length=6, null=True)),
            ],
            options={
                'db_table': 'player_goldlog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerJackpot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
            ],
            options={
                'db_table': 'player_jackpot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerLootbox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock', models.IntegerField()),
                ('garant_in', models.IntegerField()),
                ('opened', models.IntegerField()),
                ('dtime', models.DateTimeField()),
            ],
            options={
                'db_table': 'player_lootbox',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerMedal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
                ('type', models.CharField(max_length=10)),
                ('dtime', models.DateTimeField()),
            ],
            options={
                'db_table': 'player_medal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerPlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banned', models.BooleanField()),
                ('user_ip', models.CharField(max_length=50)),
                ('nickname', models.CharField(max_length=30)),
                ('image', models.CharField(blank=True, max_length=100, null=True)),
                ('time_zone', models.CharField(max_length=50)),
                ('residency_date', models.DateTimeField()),
                ('level', models.IntegerField()),
                ('exp', models.IntegerField()),
                ('energy', models.IntegerField()),
                ('last_refill', models.DateTimeField()),
                ('cash', models.BigIntegerField()),
                ('gold', models.BigIntegerField()),
                ('prize_gold', models.BigIntegerField()),
                ('bottles', models.BigIntegerField()),
                ('arrival', models.DateTimeField()),
                ('chat_ban', models.BooleanField()),
                ('last_top', models.IntegerField(blank=True, null=True)),
                ('natural_refill', models.DateTimeField(blank=True, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('energy_consumption', models.IntegerField()),
                ('paid_consumption', models.IntegerField()),
                ('paid_sum', models.IntegerField()),
                ('endurance', models.IntegerField()),
                ('knowledge', models.IntegerField()),
                ('power', models.IntegerField()),
                ('premium', models.DateTimeField()),
                ('cards_count', models.IntegerField()),
                ('daily_fin', models.BooleanField()),
                ('reason', models.TextField(blank=True, null=True)),
                ('educated', models.BooleanField()),
                ('articles_ban', models.BooleanField()),
                ('fingerprint', models.CharField(max_length=50)),
                ('utm_campaign', models.CharField(max_length=50)),
                ('utm_content', models.CharField(max_length=50)),
                ('utm_medium', models.CharField(max_length=50)),
                ('utm_source', models.CharField(max_length=50)),
                ('utm_term', models.CharField(max_length=50)),
                ('image_33', models.CharField(blank=True, max_length=100, null=True)),
                ('image_75', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'player_player',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerPlayerregionalexpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('energy_consumption', models.IntegerField()),
            ],
            options={
                'db_table': 'player_playerregionalexpense',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerPlayersettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color_back', models.CharField(max_length=6)),
                ('color_block', models.CharField(max_length=6)),
                ('color_text', models.CharField(max_length=6)),
                ('color_acct', models.CharField(max_length=6)),
                ('language', models.CharField(blank=True, max_length=7, null=True)),
                ('party_back', models.BooleanField()),
                ('full_auto', models.BooleanField()),
                ('wiki_hide', models.BooleanField()),
                ('captcha_ans', models.IntegerField()),
                ('captcha_date', models.DateTimeField()),
                ('freeze_counts', models.IntegerField()),
                ('last_checkin_date', models.DateField(blank=True, null=True)),
                ('streak_days', models.IntegerField()),
            ],
            options={
                'db_table': 'player_playersettings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerPremlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtime', models.DateTimeField()),
                ('days', models.BigIntegerField()),
                ('activity_txt', models.CharField(blank=True, max_length=7, null=True)),
            ],
            options={
                'db_table': 'player_premlog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerRatereward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=50)),
                ('dtime', models.DateTimeField()),
            ],
            options={
                'db_table': 'player_ratereward',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerSkilltraining',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtime', models.DateTimeField()),
                ('skill', models.CharField(blank=True, max_length=20, null=True)),
                ('end_dtime', models.DateTimeField()),
                ('plan_dtime', models.DateTimeField()),
                ('boosts', models.IntegerField()),
            ],
            options={
                'db_table': 'player_skilltraining',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerTestlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtime', models.DateTimeField()),
            ],
            options={
                'db_table': 'player_testlog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerTestpointusage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtime', models.DateTimeField()),
                ('count', models.IntegerField()),
                ('type', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'player_testpointusage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerWildpasslog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtime', models.DateTimeField()),
                ('count', models.BigIntegerField()),
                ('activity_txt', models.CharField(blank=True, max_length=7, null=True)),
            ],
            options={
                'db_table': 'player_wildpasslog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PollsPoll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header', models.CharField(max_length=100)),
                ('poll_dtime', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'polls_poll',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PollsVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'polls_variant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PollsVariantVotesPro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'polls_variant_votes_pro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionDefences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
            ],
            options={
                'db_table': 'region_defences',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionFossils',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.IntegerField()),
            ],
            options={
                'db_table': 'region_fossils',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionHospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
                ('top', models.IntegerField()),
            ],
            options={
                'db_table': 'region_hospital',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionInfrastructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
                ('top', models.IntegerField()),
            ],
            options={
                'db_table': 'region_infrastructure',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionMapshape',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shape', models.TextField()),
                ('zoom', models.IntegerField()),
            ],
            options={
                'db_table': 'region_mapshape',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtime', models.DateTimeField()),
            ],
            options={
                'db_table': 'region_movement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionNeighbours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'region_neighbours',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionPlane',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_use', models.BooleanField()),
                ('plane', models.CharField(max_length=10)),
                ('color', models.CharField(max_length=20)),
                ('nickname', models.CharField(max_length=25)),
                ('number', models.IntegerField()),
            ],
            options={
                'db_table': 'region_plane',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionPowerplant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
            ],
            options={
                'db_table': 'region_powerplant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_name', models.CharField(blank=True, max_length=50, null=True)),
                ('coal_proc', models.IntegerField()),
                ('iron_proc', models.IntegerField()),
                ('bauxite_proc', models.IntegerField()),
                ('ore_cap', models.DecimalField(decimal_places=2, max_digits=5)),
                ('ore_has', models.DecimalField(decimal_places=2, max_digits=5)),
                ('oil_cap', models.DecimalField(decimal_places=2, max_digits=5)),
                ('oil_has', models.DecimalField(decimal_places=2, max_digits=5)),
                ('oil_type', models.CharField(max_length=10)),
                ('gold_cap', models.DecimalField(decimal_places=2, max_digits=5)),
                ('gold_has', models.DecimalField(decimal_places=2, max_digits=5)),
                ('east', models.DecimalField(decimal_places=2, max_digits=5)),
                ('is_east', models.BooleanField()),
                ('is_north', models.BooleanField()),
                ('north', models.DecimalField(decimal_places=2, max_digits=5)),
                ('latitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('is_off', models.BooleanField()),
                ('cash_tax', models.DecimalField(decimal_places=2, max_digits=5)),
                ('oil_tax', models.DecimalField(decimal_places=2, max_digits=5)),
                ('ore_tax', models.DecimalField(decimal_places=2, max_digits=5)),
                ('trade_tax', models.DecimalField(decimal_places=2, max_digits=5)),
                ('gold_depletion', models.DecimalField(decimal_places=2, max_digits=5)),
                ('oil_depletion', models.DecimalField(decimal_places=2, max_digits=5)),
                ('ore_depletion', models.DecimalField(decimal_places=2, max_digits=5)),
                ('on_map_id', models.CharField(max_length=50)),
                ('peace_date', models.DateTimeField()),
                ('limit_id', models.IntegerField()),
                ('region_name_az', models.CharField(blank=True, max_length=50, null=True)),
                ('region_name_be', models.CharField(blank=True, max_length=50, null=True)),
                ('region_name_de', models.CharField(blank=True, max_length=50, null=True)),
                ('region_name_en', models.CharField(blank=True, max_length=50, null=True)),
                ('region_name_es', models.CharField(blank=True, max_length=50, null=True)),
                ('region_name_ind', models.CharField(blank=True, max_length=50, null=True)),
                ('region_name_lv', models.CharField(blank=True, max_length=50, null=True)),
                ('region_name_pl', models.CharField(blank=True, max_length=50, null=True)),
                ('region_name_pt_br', models.CharField(blank=True, max_length=50, null=True)),
                ('region_name_ru', models.CharField(blank=True, max_length=50, null=True)),
                ('region_name_tr', models.CharField(blank=True, max_length=50, null=True)),
                ('region_name_uk', models.CharField(blank=True, max_length=50, null=True)),
                ('joined_since', models.DateTimeField()),
                ('region_name_fr', models.CharField(blank=True, max_length=50, null=True)),
                ('region_name_it', models.CharField(blank=True, max_length=50, null=True)),
                ('region_name_sr', models.CharField(blank=True, max_length=50, null=True)),
                ('region_name_hy', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'region_region',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionRegionTerrain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'region_region_terrain',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionSpawn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'region_spawn',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionSpawnRegions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'region_spawn_regions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionTerrain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'region_terrain',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionTerrainmodifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modifier', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'db_table': 'region_terrainmodifier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rewards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(blank=True, max_length=255, null=True)),
                ('uid', models.CharField(blank=True, max_length=255, null=True)),
                ('premium', models.DateTimeField(blank=True, null=True)),
                ('cards_count', models.IntegerField(blank=True, null=True)),
                ('borders_id', models.CharField(blank=True, max_length=255, null=True)),
                ('packs_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'rewards',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SilkProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('time_taken', models.FloatField(blank=True, null=True)),
                ('file_path', models.CharField(max_length=300)),
                ('line_num', models.IntegerField(blank=True, null=True)),
                ('end_line_num', models.IntegerField(blank=True, null=True)),
                ('func_name', models.CharField(max_length=300)),
                ('exception_raised', models.BooleanField()),
                ('dynamic', models.BooleanField()),
            ],
            options={
                'db_table': 'silk_profile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SilkProfileQueries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'silk_profile_queries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SilkRequest',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('path', models.CharField(max_length=190)),
                ('query_params', models.TextField()),
                ('raw_body', models.TextField()),
                ('body', models.TextField()),
                ('method', models.CharField(max_length=10)),
                ('start_time', models.DateTimeField()),
                ('view_name', models.CharField(blank=True, max_length=190, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('time_taken', models.FloatField(blank=True, null=True)),
                ('encoded_headers', models.TextField()),
                ('meta_time', models.FloatField(blank=True, null=True)),
                ('meta_num_queries', models.IntegerField(blank=True, null=True)),
                ('meta_time_spent_queries', models.FloatField(blank=True, null=True)),
                ('pyprofile', models.TextField()),
                ('num_sql_queries', models.IntegerField()),
                ('prof_file', models.CharField(max_length=300)),
            ],
            options={
                'db_table': 'silk_request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SilkResponse',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('status_code', models.IntegerField()),
                ('raw_body', models.TextField()),
                ('body', models.TextField()),
                ('encoded_headers', models.TextField()),
            ],
            options={
                'db_table': 'silk_response',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SilkSqlquery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.TextField()),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('time_taken', models.FloatField(blank=True, null=True)),
                ('traceback', models.TextField()),
                ('identifier', models.IntegerField()),
                ('analysis', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'silk_sqlquery',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SkillBiochemistry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
            ],
            options={
                'db_table': 'skill_biochemistry',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SkillCoherence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
            ],
            options={
                'db_table': 'skill_coherence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SkillExcavation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
            ],
            options={
                'db_table': 'skill_excavation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SkillFracturing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
            ],
            options={
                'db_table': 'skill_fracturing',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SkillMilitaryproduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
            ],
            options={
                'db_table': 'skill_militaryproduction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SkillScouting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
            ],
            options={
                'db_table': 'skill_scouting',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SkillStandardization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
            ],
            options={
                'db_table': 'skill_standardization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SkillTrophyengineering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
            ],
            options={
                'db_table': 'skill_trophyengineering',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocialaccountSocialaccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(max_length=30)),
                ('uid', models.CharField(max_length=191)),
                ('last_login', models.DateTimeField()),
                ('date_joined', models.DateTimeField()),
                ('extra_data', models.TextField()),
            ],
            options={
                'db_table': 'socialaccount_socialaccount',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocialaccountSocialapp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(max_length=30)),
                ('name', models.CharField(max_length=40)),
                ('client_id', models.CharField(max_length=191)),
                ('secret', models.CharField(max_length=191)),
                ('key', models.CharField(max_length=191)),
            ],
            options={
                'db_table': 'socialaccount_socialapp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocialaccountSocialappSites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'socialaccount_socialapp_sites',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocialaccountSocialtoken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.TextField()),
                ('token_secret', models.TextField()),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'socialaccount_socialtoken',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocialAuthAssociation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_url', models.CharField(max_length=255)),
                ('handle', models.CharField(max_length=255)),
                ('secret', models.CharField(max_length=255)),
                ('issued', models.IntegerField()),
                ('lifetime', models.IntegerField()),
                ('assoc_type', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'social_auth_association',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocialAuthCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=254)),
                ('code', models.CharField(max_length=32)),
                ('verified', models.BooleanField()),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'social_auth_code',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocialAuthNonce',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_url', models.CharField(max_length=255)),
                ('timestamp', models.IntegerField()),
                ('salt', models.CharField(max_length=65)),
            ],
            options={
                'db_table': 'social_auth_nonce',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocialAuthPartial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=32)),
                ('next_step', models.SmallIntegerField()),
                ('backend', models.CharField(max_length=32)),
                ('data', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'social_auth_partial',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocialAuthUsersocialauth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(max_length=32)),
                ('uid', models.CharField(max_length=255)),
                ('extra_data', models.TextField()),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'social_auth_usersocialauth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StateBulletin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'state_bulletin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StateCapital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'state_capital',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StateDeputymandate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_president', models.BooleanField()),
            ],
            options={
                'db_table': 'state_deputymandate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StateParliament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.IntegerField()),
                ('elections_day', models.IntegerField()),
                ('foundation_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'state_parliament',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StateParliamentparty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seats', models.IntegerField()),
            ],
            options={
                'db_table': 'state_parliamentparty',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StateParliamentvoting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('voting_start', models.DateTimeField()),
                ('voting_end', models.DateTimeField()),
            ],
            options={
                'db_table': 'state_parliamentvoting',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StateState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('image', models.CharField(blank=True, max_length=100, null=True)),
                ('color', models.CharField(max_length=6)),
                ('foundation_date', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(max_length=15)),
                ('deleted', models.BooleanField()),
                ('cash_tax', models.DecimalField(decimal_places=2, max_digits=5)),
                ('oil_tax', models.DecimalField(decimal_places=2, max_digits=5)),
                ('ore_tax', models.DecimalField(decimal_places=2, max_digits=5)),
                ('trade_tax', models.DecimalField(decimal_places=2, max_digits=5)),
                ('residency', models.CharField(max_length=5)),
                ('message', models.CharField(max_length=300)),
            ],
            options={
                'db_table': 'state_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StateTreasury',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('steel', models.IntegerField()),
                ('aluminium', models.IntegerField()),
                ('antitank', models.IntegerField()),
                ('bauxite', models.IntegerField()),
                ('brent_oil', models.IntegerField()),
                ('cash', models.BigIntegerField()),
                ('coal', models.IntegerField()),
                ('deleted', models.BooleanField()),
                ('diesel', models.IntegerField()),
                ('gas', models.IntegerField()),
                ('iron', models.IntegerField()),
                ('jet', models.IntegerField()),
                ('pzrk', models.IntegerField()),
                ('station', models.IntegerField()),
                ('tank', models.IntegerField()),
                ('urals_oil', models.IntegerField()),
                ('wti_oil', models.IntegerField()),
                ('rifle', models.IntegerField()),
                ('ifv', models.IntegerField()),
                ('medical', models.IntegerField()),
                ('plastic', models.IntegerField()),
                ('actualize_dtime', models.DateTimeField(blank=True, null=True)),
                ('power_actualize', models.DateTimeField(blank=True, null=True)),
                ('power_on', models.BooleanField()),
                ('drone', models.IntegerField()),
                ('drilling', models.IntegerField()),
                ('residency_id', models.CharField(blank=True, max_length=150, null=True)),
                ('mines', models.IntegerField()),
            ],
            options={
                'db_table': 'state_treasury',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StateTreasurylock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lock_count', models.BigIntegerField()),
                ('deleted', models.BooleanField()),
                ('cash', models.BooleanField()),
            ],
            options={
                'db_table': 'state_treasurylock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StateTreasurystock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock', models.IntegerField()),
            ],
            options={
                'db_table': 'state_treasurystock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StorageAuctionbet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField()),
                ('deleted', models.BooleanField()),
                ('dtime', models.DateTimeField()),
            ],
            options={
                'db_table': 'storage_auctionbet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StorageAuctionlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
                ('start_price', models.IntegerField()),
                ('deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'storage_auctionlot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StorageBuyauction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('accept_date', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.BooleanField()),
                ('extensions', models.IntegerField()),
            ],
            options={
                'db_table': 'storage_buyauction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StorageCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'storage_cache',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StorageCachestock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock', models.IntegerField()),
            ],
            options={
                'db_table': 'storage_cachestock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StorageCashlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lock_cash', models.BigIntegerField()),
                ('deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'storage_cashlock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StorageDestroy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtime', models.DateTimeField()),
                ('coal', models.IntegerField()),
                ('iron', models.IntegerField()),
                ('bauxite', models.IntegerField()),
                ('wti_oil', models.IntegerField()),
                ('brent_oil', models.IntegerField()),
                ('urals_oil', models.IntegerField()),
                ('gas', models.IntegerField()),
                ('diesel', models.IntegerField()),
                ('steel', models.IntegerField()),
                ('aluminium', models.IntegerField()),
                ('tank', models.IntegerField()),
                ('jet', models.IntegerField()),
                ('station', models.IntegerField()),
                ('pzrk', models.IntegerField()),
                ('antitank', models.IntegerField()),
                ('rifle', models.IntegerField()),
                ('ifv', models.IntegerField()),
                ('medical', models.IntegerField()),
                ('plastic', models.IntegerField()),
                ('drone', models.IntegerField()),
                ('drilling', models.IntegerField()),
                ('mines', models.IntegerField()),
                ('count', models.IntegerField()),
            ],
            options={
                'db_table': 'storage_destroy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StorageGood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('name_ru', models.CharField(blank=True, max_length=30, null=True)),
                ('name_en', models.CharField(blank=True, max_length=30, null=True)),
                ('name_de', models.CharField(blank=True, max_length=30, null=True)),
                ('name_be', models.CharField(blank=True, max_length=30, null=True)),
                ('name_es', models.CharField(blank=True, max_length=30, null=True)),
                ('name_pl', models.CharField(blank=True, max_length=30, null=True)),
                ('name_uk', models.CharField(blank=True, max_length=30, null=True)),
                ('name_tr', models.CharField(blank=True, max_length=30, null=True)),
                ('name_ind', models.CharField(blank=True, max_length=30, null=True)),
                ('name_lv', models.CharField(blank=True, max_length=30, null=True)),
                ('name_pt_br', models.CharField(blank=True, max_length=30, null=True)),
                ('size', models.CharField(max_length=6)),
                ('volume', models.FloatField()),
                ('name_az', models.CharField(blank=True, max_length=30, null=True)),
                ('type', models.CharField(max_length=10)),
                ('name_fr', models.CharField(blank=True, max_length=30, null=True)),
                ('name_it', models.CharField(blank=True, max_length=30, null=True)),
                ('name_sr', models.CharField(blank=True, max_length=30, null=True)),
                ('name_hy', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'storage_good',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StorageGoodlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lock_count', models.BigIntegerField()),
                ('deleted', models.BooleanField()),
                ('old_good', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'storage_goodlock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StorageLootboxcoauthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'db_table': 'storage_lootboxcoauthor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StorageLootboxprize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plane', models.CharField(max_length=10)),
                ('color', models.CharField(max_length=20)),
                ('deleted', models.BooleanField()),
                ('replaced', models.BooleanField()),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'storage_lootboxprize',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StorageStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock', models.IntegerField()),
            ],
            options={
                'db_table': 'storage_stock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StorageStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cash', models.BigIntegerField()),
                ('deleted', models.BooleanField()),
                ('was_moved', models.BooleanField()),
                ('level', models.IntegerField()),
                ('large_cap', models.IntegerField()),
                ('medium_cap', models.IntegerField()),
                ('small_cap', models.IntegerField()),
            ],
            options={
                'db_table': 'storage_storage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StorageTradeoffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_volume', models.BigIntegerField()),
                ('count', models.BigIntegerField()),
                ('price', models.BigIntegerField()),
                ('cost', models.BigIntegerField()),
                ('cost_count', models.BigIntegerField()),
                ('type', models.CharField(max_length=4)),
                ('view_type', models.CharField(max_length=6)),
                ('old_good', models.CharField(max_length=10)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('accept_date', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.BooleanField()),
                ('wild_pass', models.BooleanField()),
                ('tax', models.IntegerField()),
            ],
            options={
                'db_table': 'storage_tradeoffer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StorageTradeofferAccepters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'storage_tradeoffer_accepters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StorageTradinglog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtime', models.DateTimeField()),
                ('cash_value', models.BigIntegerField()),
                ('good_value', models.BigIntegerField()),
                ('delivery_value', models.BigIntegerField()),
            ],
            options={
                'db_table': 'storage_tradinglog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StorageTransport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtime', models.DateTimeField()),
                ('total_vol', models.IntegerField()),
                ('coal', models.IntegerField()),
                ('coal_vol', models.IntegerField()),
                ('iron', models.IntegerField()),
                ('iron_vol', models.IntegerField()),
                ('bauxite', models.IntegerField()),
                ('bauxite_vol', models.IntegerField()),
                ('wti_oil', models.IntegerField()),
                ('wti_oil_vol', models.IntegerField()),
                ('brent_oil', models.IntegerField()),
                ('brent_oil_vol', models.IntegerField()),
                ('urals_oil', models.IntegerField()),
                ('urals_oil_vol', models.IntegerField()),
                ('gas', models.IntegerField()),
                ('gas_vol', models.IntegerField()),
                ('diesel', models.IntegerField()),
                ('diesel_vol', models.IntegerField()),
                ('steel', models.IntegerField()),
                ('steel_vol', models.IntegerField()),
                ('aluminium', models.IntegerField()),
                ('aluminium_vol', models.IntegerField()),
                ('tank', models.IntegerField()),
                ('tank_vol', models.IntegerField()),
                ('jet', models.IntegerField()),
                ('jet_vol', models.IntegerField()),
                ('station', models.IntegerField()),
                ('station_vol', models.IntegerField()),
                ('pzrk', models.IntegerField()),
                ('pzrk_vol', models.IntegerField()),
                ('antitank', models.IntegerField()),
                ('antitank_vol', models.IntegerField()),
                ('delivery_value', models.BigIntegerField()),
                ('rifle', models.IntegerField()),
                ('rifle_vol', models.IntegerField()),
                ('ifv', models.IntegerField()),
                ('ifv_vol', models.IntegerField()),
                ('medical', models.IntegerField()),
                ('medical_vol', models.IntegerField()),
                ('plastic', models.IntegerField()),
                ('plastic_vol', models.IntegerField()),
                ('drone', models.IntegerField()),
                ('drone_vol', models.IntegerField()),
                ('mines', models.IntegerField()),
                ('mines_vol', models.IntegerField()),
                ('count', models.IntegerField()),
            ],
            options={
                'db_table': 'storage_transport',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WarAutowar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtime', models.DateTimeField()),
                ('object_id', models.IntegerField()),
                ('war_side', models.CharField(max_length=3)),
                ('dmg_balance', models.CharField(max_length=4)),
                ('dmg_points', models.IntegerField()),
                ('source_id', models.IntegerField()),
            ],
            options={
                'db_table': 'war_autowar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WarAutowarsquad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
            ],
            options={
                'db_table': 'war_autowarsquad',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WarEventwar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.BooleanField()),
                ('hq_points', models.BigIntegerField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('round', models.IntegerField()),
                ('graph', models.TextField(blank=True, null=True)),
                ('defence_points', models.BigIntegerField()),
                ('side_limit', models.BigIntegerField()),
            ],
            options={
                'db_table': 'war_eventwar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WarGroundwar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running', models.BooleanField()),
                ('round', models.IntegerField()),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('graph', models.TextField(blank=True, null=True)),
                ('deleted', models.BooleanField()),
                ('hq_points', models.BigIntegerField()),
                ('defence_points', models.BigIntegerField()),
                ('side_limit', models.BigIntegerField()),
            ],
            options={
                'db_table': 'war_groundwar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WarMartial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField()),
                ('days_left', models.IntegerField()),
                ('active_end', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'war_martial',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WarPlayerdamage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField()),
                ('damage', models.IntegerField()),
                ('energy', models.IntegerField()),
                ('side', models.CharField(max_length=3)),
                ('hide', models.BooleanField()),
            ],
            options={
                'db_table': 'war_playerdamage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WarRebel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resident', models.BooleanField()),
                ('deleted', models.BooleanField()),
                ('dtime', models.DateTimeField()),
            ],
            options={
                'db_table': 'war_rebel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WarRevolution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('defence_points', models.BigIntegerField()),
                ('running', models.BooleanField()),
                ('round', models.IntegerField()),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('graph', models.TextField(blank=True, null=True)),
                ('deleted', models.BooleanField()),
                ('hq_points', models.BigIntegerField()),
                ('side_limit', models.BigIntegerField()),
            ],
            options={
                'db_table': 'war_revolution',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WarTestResults',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_id', models.IntegerField(blank=True, null=True)),
                ('total_damage', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('nickname', models.CharField(blank=True, null=True)),
                ('username', models.CharField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, null=True)),
                ('last_name', models.CharField(blank=True, null=True)),
                ('reward', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('rewarded', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'war_test_results',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WarUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('damage', models.IntegerField()),
                ('energy', models.IntegerField()),
            ],
            options={
                'db_table': 'war_unit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WarWarside',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField()),
                ('side', models.CharField(max_length=3)),
                ('count', models.IntegerField()),
            ],
            options={
                'db_table': 'war_warside',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountEmailaddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=254, unique=True)),
                ('verified', models.BooleanField()),
                ('primary', models.BooleanField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='overview.authuser')),
            ],
            options={
                'db_table': 'account_emailaddress',
            },
        ),
    ]
